import logging
import unittest
from import_dart_data import esclient, ELASTICSEARCH_URL, ELASTIC_CERTFILE_FINGERPRINT, ELASTIC_PASSWORD, get_corp_info_from_dart, upload_corp_year_data, upload_corp_quarter_data
from elasticsearch import Elasticsearch
from elasticsearch.helpers import streaming_bulk, scan
import sys


class Test(unittest.TestCase):
    def setUp(self):
        # Create the client instance
        # Password for the 'elastic' user generated by Elasticsearch
        # ELASTIC_PASSWORD = "<password>"
        # self.esclient = Elasticsearch(
        #     ELASTICSEARCH_URL,
        #     # ca_certs=ELASTIC_CERTFILE,
        #     ssl_assert_fingerprint=ELASTIC_CERTFILE_FINGERPRINT,
        #     basic_auth=("elastic", ELASTIC_PASSWORD)
        # )
        self.esclient = esclient
        self.corp_code = "00126380"
        self.corp_name = '삼성전자'

    def test_get_corp_quarter_info_from_dart(self):
        years = [2022]
        data = get_corp_info_from_dart(self.code, years)
        # print(data)
        # self.assertIsNotNone(data)
        # data는 1Q~4Q
        self.assertEqual(len(data), len(years))

        year = years[0]
        n = upload_corp_quarter_data(self.esclient, data[year][0])
        self.assertGreaterEqual(n, 1)
        
    def test_get_corp_year_info_from_dart(self):
        years = [2022]
        data = get_corp_info_from_dart(self.code, years)
        # print(data)
        # self.assertIsNotNone(data)
        # data는 1Q~4Q
        self.assertEqual(len(data), len(years))

        year = years[0]
        ns = upload_corp_year_data(self.esclient, data)
        self.assertGreaterEqual(len(ns), 1)
        
    def test_elasticsearch_client(self):
        info = self.esclient.info()
        print(info)
        self.assertGreater(len(info), 0)

    def test_query_id(self):
        # 삼성잔자
        resp = self.esclient.get(index="corp_code", id=self.code)
        # print(resp)
        # {'_index': 'corp_code', '_id': '00126380', '_version': 1, '_seq_no': 288931, '_primary_term': 1, 
        # 'found': True, 
        # '_source': {'code': '00126380', 'corp_name': '삼성전자', 'stock_code': '005930', 'modify_date': '20230110'}}
        self.assertEqual(resp['_source']['corp_code'], self.code)
        self.assertEqual(resp['_source']['corp_name'], self.corp_name)

    def test_query_all_docs(self):
        logging.disable(sys.maxsize)  # Python 3
        n = 0
        for doc in scan(self.esclient, query={"query": {"match_all": {}}}, index="corp_code"):
            if n == 0:
                print(doc)
            n += 1
        logging.disable(logging.NOTSET)
        self.assertEqual(n, 97568)
